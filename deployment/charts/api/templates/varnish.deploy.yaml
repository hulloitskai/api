{{- $name := include "varnish.name" . }}
{{- $fullName := include "varnish.fullname" . }}
{{- define "labels" }}
  {{- range $key, $val := .Values.varnish.deployment.labels }}
    {{- $key }}: {{ $val | quote }}
  {{- end }}
{{- end }}
{{- $labels := include "labels" . -}}

{{- if .Values.varnish.enabled -}}
apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "chart.chart" . }}
{{ $labels | indent 4 }}

spec:
  replicas: {{ .Values.varnish.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
{{ $labels | indent 6 }}
  strategy: {{- toYaml .Values.deployment.strategy | nindent 4 -}}
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ $labels | indent 8 }}
    spec:
      containers:
        - name: varnish
          image: {{ .Values.varnish.deployment.image | quote }}
          imagePullPolicy: {{ .Values.varnish.deployment.imagePullPolicy }}
          args:
            - varnishd
            - -Ff
            - /usr/local/etc/varnish/default.vcl
            - -s
            - file,/var/lib/varnish/varnish_storage.bin,{{ .Values.varnish.storage.size }}
          volumeMounts:
            - name: config
              mountPath: /usr/local/etc/varnish/
            - name: storage
              mountPath: /var/lib/varnish/varnish_storage.bin
          ports:
            - name: varnish
              containerPort: {{ .Values.varnish.deployment.port }}
              protocol: TCP
          {{- with .Values.varnish.deployment.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ $name }}
        - name: storage
          hostPath:
            path: {{ .Values.varnish.storage.hostPath }}
            type: FileOrCreate
      {{- with .Values.varnish.deployment.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.varnish.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 -}}
      {{- end }}
      {{- with .Values.varnish.deployment.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
